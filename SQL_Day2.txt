# Question 1 - Rising Temperature
Table: Weather
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+
id is the primary key for this table.
This table contains information about the temperature on a certain day.

Write an SQL query to find all dates' Id with higher temperatures compared to its previous dates (yesterday).
Return the result table in any order.


#Solution 1:
select 
w1.id
from weather w
inner join weather w1 on w.recordDate=dateadd(day,-1,w1.recordDate)
where w1.temperature>w.temperature


------------------------------------------------------------------------------------------------------------------------


# Question 2 - Calculate Special Bonus
Table: Employees
+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| employee_id | int     |
| name        | varchar |
| salary      | int     |
+-------------+---------+
employee_id is the primary key for this table.
Each row of this table indicates the employee ID, employee name, and salary.
 
Write an SQL query to calculate the bonus of each employee. The bonus of an employee is 100% of their salary if the ID of the employee is an odd number and the employee name does not start with the character 'M'. The bonus of an employee is 0 otherwise.
Return the result table ordered by employee_id.

# Solution 2
select
employee_id,case when employee_id%2=1 and name not like 'm%' then salary
else 0 end as bonus
from Employees
order by 1


------------------------------------------------------------------------------------------------------------------------


# Question 3 - Swap Salary
Table: Salary
+-------------+----------+
| Column Name | Type     |
+-------------+----------+
| id          | int      |
| name        | varchar  |
| sex         | ENUM     |
| salary      | int      |
+-------------+----------+
id is the primary key for this table.
The sex column is ENUM value of type ('m', 'f').
The table contains information about an employee.
 
Write an SQL query to swap all 'f' and 'm' values (i.e., change all 'f' values to 'm' and vice versa) with a single update statement and no intermediate temporary tables.
Note that you must write a single update statement, do not write any select statement for this problem.

# Solution 3
UPDATE Salary 
SET     
Sex =  CASE  
    WHEN Sex = 'f' THEN 'm' 
    WHEN Sex = 'm' THEN 'f' 
     END 
	 

------------------------------------------------------------------------------------------------------------------------


# Question 4 - Delete Duplicate Emails
Table: Person
+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| email       | varchar |
+-------------+---------+
id is the primary key column for this table.
Each row of this table contains an email. The emails will not contain uppercase letters.
 
Write an SQL query to delete all the duplicate emails, keeping only one unique email with the smallest id. Note that you are supposed to write a DELETE statement and not a SELECT one.
After running your script, the answer shown is the Person table. The driver will first compile and run your piece of code and then show the Person table. The final order of the Person table does not matter.

# Solution 4
DELETE FROM Person
    WHERE ID NOT IN
    (
        SELECT Min(ID) AS MaxRecordID
        FROM Person
        GROUP BY email
    )