# Question 1 - Rising Temperature
Table: Weather
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+
id is the primary key for this table.
This table contains information about the temperature on a certain day.

Write an SQL query to find all dates' Id with higher temperatures compared to its previous dates (yesterday).
Return the result table in any order.


#Solution 1:
select 
w1.id
from weather w
inner join weather w1 on w.recordDate=dateadd(day,-1,w1.recordDate)
where w1.temperature>w.temperature


------------------------------------------------------------------------------------------------------------------------


# Question 2 - Calculate Special Bonus
Table: Employees
+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| employee_id | int     |
| name        | varchar |
| salary      | int     |
+-------------+---------+
employee_id is the primary key for this table.
Each row of this table indicates the employee ID, employee name, and salary.
 
Write an SQL query to calculate the bonus of each employee. The bonus of an employee is 100% of their salary if the ID of the employee is an odd number and the employee name does not start with the character 'M'. The bonus of an employee is 0 otherwise.
Return the result table ordered by employee_id.

# Solution 2
select
employee_id,case when employee_id%2=1 and name not like 'm%' then salary
else 0 end as bonus
from Employees
order by 1

------------------------------------------------------------------------------------------------------------------------
